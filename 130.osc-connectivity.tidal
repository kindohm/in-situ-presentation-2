-- OSC connectivity

-- demo: Processing


let 
  shift p = (1024 ~>) $ p
  shift' num p = (num ~>) $ p
  shiftBy = shift'
  shrand num = shiftBy num $ rand
  gtfo p = (const $ s "~") $ p 
  g = gtfo
  one p = off (0.0625) id $ p
  roll howOften p = sometimesBy howOften (stutWith 2 (0.0625*3) id) $ shift $ p
  rollBy nums howOften p = sometimesBy howOften (stutWith nums (0.0625*3) id) $ shift $ p
  rollSlow howOften p = sometimesBy howOften (stutWith 2 (0.125*3) id) $ shift $ p
  stdnote = note "-24"
  rytm = s "midi"
  pad1 = midichan 0 # stdnote # rytm
  pad2 = midichan 1 # stdnote # rytm
  pad3 = midichan 2 # stdnote # rytm
  pad4 = midichan 3 # stdnote # rytm
  pad5 = midichan 4 # stdnote # rytm
  pad6 = midichan 5 # stdnote # rytm
  pad7 = midichan 6 # stdnote # rytm
  pad8 = midichan 7 # stdnote # rytm
  pad9 = midichan 8 # stdnote # rytm
  pad10 = midichan 9 # stdnote # rytm
  pad11 = midichan 10 # stdnote # rytm
  pad12 = midichan 11 # stdnote # rytm
  unfollowedChan = midichan 15
  discRange a b = (discretise 1 $ range a b $ shrand 10003)
  discrange = discRange
  triRange a b c = (range a b $ slow c tri)
  trirange = triRange
  cpsDisc a b = (|* cps (discRange a b))
  cpsRange a b c = (|* cps (triRange a b c))
  cpsTri = cpsRange
  randDelay = stack [ slow 2.13 $ ccn 45 # ccv (shiftBy 5544 $ choose [0,127]) -- d
                      , slow 1.13 $ ccn 46 # ccv (range 0 127 $ shrand 9988) -- dt
                      , slow 3.1 $ ccn 47 # ccv (range 0 127 $ shrand 19988) ] # s "midi"
  normDelay = stack [ ccn 45 # ccv 0, ccn 46 # ccv 0, ccn 47 # ccv 0 ] # s "midi"
  scene x = ccn 92 # ccv x
  replicator text1 = [putStr (text1) | x <- replicate 500 text1]
  flood text2 = sequence_(replicator text2)
  
-- kit 90

do 
  let plies = (slow 1 $ "<3 4 5 7>") :: Pattern (Ratio Integer)
      denom = 4
      period = 0.5
      hatPlyFunc = (# pad11)
      kickPlyFunc = (# gain 0.75)
      synthUp = 0
      synthDown = 0
      synthMute = id
      hatMute = g
      drumsMute = id
      kickFill = g
  d1 
    $ (|* gain 1.2)
    $ someCyclesBy period (within (0.625, 1) (const 
      $ stack [ 
        pan "~ ~ ~ ~ ~ [1 ~] ~ ~" # pad4
        , kickFill $ pan "~ ~ ~ ~ ~ [~ 1?] 1*2? 1*2?" # pad3 ]))
    $ stack [
    (|+ note 0) $ synthMute $ iter 8 $ struct "1(3,8)" $ pad1 --synth1
    , (|+ note 0) $ synthMute $ ((3/16) ~>) $ iter 8 $ struct "1(3,8)" $ pad2 -- synth2
    , hatMute $ plyWith plies (hatPlyFunc) $ slow (plies/denom) $ fast 4 $ pad12 -- hat
    , drumsMute $ plyWith plies (kickPlyFunc) $ slow (plies/denom) $ fast 4 $ pad3 -- kick
    , synthMute $ ccn 35 # ccv synthUp
    , synthMute $ ccn 36 # ccv synthUp
    , synthMute $ ccn 40 # ccv synthDown
    , synthMute $ ccn 41 # ccv synthDown
    , scene (slow 3 $ "<0>")
    ] # s "midi" # cps (160/120/2) 



hush