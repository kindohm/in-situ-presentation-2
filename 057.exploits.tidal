-- Mike's Favorite Tidal Exploitsâ„¢

- stacks

d1 $  
  whenmod 6 4 (# speed 2) $
  stack [ 
    every 4 (fast 2) $ s "k doru doru peri", 
    every 2 (# pan 1) $ s "s*2", 
    every 3 rev $ s "ch(3,8)" ]

hush



- euclid and shifting


- randomness

d1 $ s "k*8" 



hush





- binary patterns

let pat = "0 1 1 0 1 1 1"

d1 
  $ stack [
  struct pat $ s "k", 
  struct (inv pat) $ s "cp" ]




hush

- conditional changes (fills and swaps)
- LFO everything
- patterns of patterns

- modulating time

d1
  $ (# cps ("<1 1.5 0.75>" * "<1 1.5 1.25 0.8>" * (segment 1 $ range 0.5 2 $ slow 3 sine )))
  $ stack [ s "k*8" ] 
  

hush




- patterns as data

let x = "1 2 1 3 2"
    y = "<5 4 7 6 5 4>"

d1 $ every (x/y) (# speed 2) $ s "k*8" # cps 1

hush




- ply patterns

let pat = "<5 10 15>"
    denom = "<4 8>"

d1 
  $ every 2 rev 
  $ plyWith pat (|* gain 0.93) $ slow (pat / denom) $ s "k cp"


d1 $ s "ch peri doru cp" # speed "[1 -1]/2"

hush



hush

- special mention: scales and melody
